[
  {
    "name": "BlueScreenView",
	"gui": true,
    "cliOptions": true,
    "cli": false,
    "urlPrefix": "x64 Zip: ",
    "url": "https://www.nirsoft.net/utils/bluescreenview-x64.zip",
    "urlText": "nirsoft.net/utils/bluescreenview-x64.zip",
	"extraUrlPrefix": "Site: ",
    "extraUrl": "https://www.nirsoft.net/utils/blue_screen_view.html",
	"extraUrlText": "nirsoft.net/utils/blue_screen_view.html",
    "description": "A small utility that displays details of previous BSOD errors (the blue screen of death, or stop errors, that disappear before you can read them). It can also display Windows minidump logs from other machines on your network. See the 'Site' link for other versions and documentation.",
    "category": "System",
    "type": "Native App",
    "platform": "Windows"
  },
  {
    "name": "LastActivityView",
	"gui": true,
    "cliOptions": true,
    "cli": false,
    "urlPrefix": "Zip: ",
    "url": "https://www.nirsoft.net/utils/lastactivityview.zip",
    "urlText": "nirsoft.net/utils/lastactivityview.zip",
	"extraUrlPrefix": "Site: ",
    "extraUrl": "https://www.nirsoft.net/utils/computer_activity_view.html",
	"extraUrlText": "nirsoft.net/utils/computer_activity_view.html",
    "description": "A tiny utility that displays a searchable list of recent system and user activities. Handy for answering the question \"What did you do before it crashed?\". Includes full paths to related files. See the 'Site' link for documentation.",
    "category": "System",
    "type": "Native App",
    "platform": "Windows"
  },
  {
    "name": "ImportExcel",
	"gui": false,
    "cliOptions": false,
    "cli": true,
    "urlPrefix": "PS Gallery: ",
    "url": "https://www.powershellgallery.com/packages/ImportExcel/",
    "urlText": "powershellgallery.com/packages/ImportExcel/",
	"extraUrlPrefix": "Site: ",
    "extraUrl": "https://github.com/dfinke/ImportExcel",
	"extraUrlText": "github.com/dfinke/ImportExcel",
    "description": "Legendary PowerShell module that I use weekly to import Excel files into my scripts, and create them. It even supports formatting, multiple sheets, charts and pivot tables and doesn't need Excel to be installed. Lots of docs and examples on GitHub.",
    "category": "Scripting",
    "type": "PowerShell",
    "platform": "Win|Mac|Linux"
  },
  {
    "name": "Chris Titus' WinUtil",
    "gui": false,
    "cliOptions": false,
    "cli": true,
    "command": "iwr -useb https://christitus.com/win | iex",
    "commandPrefix": "Run from elevated PS prompt: ",
    "extraUrlPrefix": "Docs: ",
    "extraUrl": "https://christitus.com/windows-tool/",
    "extraUrlText": "christitus.com/windows-tool/",
    "description": "A mature utility from Chris Titus that includes a WinGet batch installer/upgrader (with more choices than Ninite), debloating, tweaks, and much more.",
    "category": "System",
    "type": "PowerShell",
    "platform": "Windows"
  },
  {
    "name": "Windows Disk Check",
    "gui": false,
    "cliOptions": false,
    "cli": true,
    "command": "chkdsk.exe /scan /perf & sfc.exe /scannow & DISM /Online /Cleanup-Image /RestoreHealth & sfc.exe /scannow",
    "commandPrefix": "Run from elevated CMD prompt: ",
    "extraUrlPrefix": "Docs: ",
    "extraUrl": "https://learn.microsoft.com/en-us/windows-server/administration/windows-commands/windows-commands#command-line-reference-a-z",
    "extraUrlText": "learn.microsoft.com/.../windows-commands",
    "description": "A thorough check for and repair of a Windows NTFS volume in one command line. Click to copy, open an elevated prompt, paste and go.",
    "category": "System",
    "type": "cmd",
    "platform": "Windows"
  },
  {
    "name": "Event Log Summary",
    "gui": false,
    "cliOptions": false,
    "cli": true,
    "command": "$StartTime = (Get-Date).AddHours(-8)\r\n$Errors = Get-WinEvent -FilterHashtable @{\r\nLogName = '*'\r\nLevel = 1,2\r\nStartTime = $StartTime\r\n} -ErrorAction SilentlyContinue\r\n$Errors | \r\nGroup-Object Id, LogName | \r\nSelect-Object Count, \r\n    @{Name='EventID_LogName';Expression={$_.Name}}, \r\n    @{Name='SampleMessage';Expression={$_.Group[0].Message}} | \r\nSort-Object Count -Descending",
    "commandPrefix": "Run from elevated PS prompt: ",
    "extraUrlPrefix": "Docs: ",
    "extraUrl": "https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.diagnostics/get-winevent?view=powershell-5.1",
    "extraUrlText": "learn.microsoft.com/.../get-winevent",
    "description": "Get a quick summary of critical and error events from the last eight hours. Shows a count of ID, including log name and sample message. Saves to $Error so you can Export-CSV if you spot anything interesting.",
    "category": "System",
    "type": "PowerShell",
    "platform": "Windows"
  }
]