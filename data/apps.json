[
  {
    "name": "Chris Titus' WinUtil",
    "gui": false,
    "cliOptions": false,
    "cli": true,
    "command": "iwr -useb https://christitus.com/win | iex",
    "commandPrefix": "Run from elevated PS prompt: ",
    "extraUrlPrefix": "Docs: ",
    "extraUrl": "https://christitus.com/windows-tool/",
    "extraUrlText": "christitus.com/windows-tool/",
    "description": "A mature utility from Chris Titus that includes a WinGet batch installer/upgrader (with more choices than Ninite), debloating, tweaks, and much more.",
    "category": "System",
    "type": "PowerShell",
    "platform": "Windows"
  },
  {
    "name": "Windows Disk Check",
    "gui": false,
    "cliOptions": false,
    "cli": true,
    "command": "chkdsk.exe /scan /perf & sfc.exe /scannow & DISM /Online /Cleanup-Image /RestoreHealth & sfc.exe /scannow",
    "commandPrefix": "Run from elevated CMD prompt: ",
    "extraUrlPrefix": "Docs: ",
    "extraUrl": "https://learn.microsoft.com/en-us/windows-server/administration/windows-commands/windows-commands#command-line-reference-a-z",
    "extraUrlText": "learn.microsoft.com/.../windows-commands",
    "description": "A thorough check and repair of a Windows NTFS volume, in one command line. \nClick to copy, open an elevated prompt, paste and go.",
    "category": "System",
    "type": "cmd",
    "platform": "Windows"
  },
  {
    "name": "Event Log Summary",
    "gui": false,
    "cliOptions": false,
    "cli": true,
    "command": "$StartTime = (date).AddHours(-8)\n$Errors = Get-WinEvent -FilterHashtable @{LogName='*';Level=1,2;StartTime=$StartTime} -EA 0\n$Errors|group Id,LogName|select Count,@{N='EventID_LogName';E={$_.Name}},@{N='SampleMessage';E={$_.Group[0].Message}}|sort Count -Des",
    "commandPrefix": "Run from elevated PS prompt: ",
    "extraUrlPrefix": "Docs: ",
    "extraUrl": "https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.diagnostics/get-winevent?view=powershell-5.1",
    "extraUrlText": "learn.microsoft.com/.../get-winevent",
    "description": "Get a quick summary of critical and error events from the last eight hours. \nThe output gives a count of IDs, including log name and a sample message. It's saved to $Error so you can Export-CSV if you spot anything interesting.",
    "category": "System",
    "type": "PowerShell",
    "platform": "Windows"
  },
  {
    "name": "WLAN Report",
    "gui": false,
    "cliOptions": false,
    "cli": true,
    "command": "netsh wlan show wlanreport && start \"\" \"%ProgramData%\\Microsoft\\Windows\\WlanReport\\\" /MAX",
    "commandPrefix": "Run from elevated CMD prompt: ",
    "extraUrlPrefix": "Docs: ",
    "extraUrl": "https://learn.microsoft.com/en-us/windows-server/networking/technologies/netsh/netsh-contexts",
    "extraUrlText": "learn.microsoft.com/.../netsh-contexts",
    "description": "Generate a netsh report of recent Wi-Fi sessions, then immediate open the containg folder; handy whether you want to open it or download it. \nThe 'wlan-report-<date>.html' file doesn't need the other files in WlanReport, but 'wlan-report-latest.xml' could be useful if you need to parse something with a script.",
    "category": "System",
    "type": "cmd",
    "platform": "Windows"
  },
  {
    "name": "BlueScreenView",
	"gui": true,
    "cliOptions": true,
    "cli": false,
    "urlPrefix": "x64 Zip: ",
    "url": "https://www.nirsoft.net/utils/bluescreenview-x64.zip",
    "urlText": "nirsoft.net/utils/bluescreenview-x64.zip",
	"extraUrlPrefix": "Site: ",
    "extraUrl": "https://www.nirsoft.net/utils/blue_screen_view.html",
	"extraUrlText": "nirsoft.net/utils/blue_screen_view.html",
    "description": "A small utility that displays details of previous BSOD errors (the blue screen of death, or stop errors, that disappear before you can read them). \nBlueScreenView can also display Windows minidump logs from other machines on your network. \nSee the 'Site' link for other versions and documentation.",
    "category": "System",
    "type": "Native App",
    "platform": "Windows"
  },
  {
    "name": "LastActivityView",
	"gui": true,
    "cliOptions": true,
    "cli": false,
    "urlPrefix": "Zip: ",
    "url": "https://www.nirsoft.net/utils/lastactivityview.zip",
    "urlText": "nirsoft.net/utils/lastactivityview.zip",
	"extraUrlPrefix": "Site: ",
    "extraUrl": "https://www.nirsoft.net/utils/computer_activity_view.html",
	"extraUrlText": "nirsoft.net/utils/computer_activity_view.html",
    "description": "A tiny utility that displays a searchable list of recent system and user activities. It's perfect for answering the question \"What did you do before it crashed?\". Includes full paths to related files. \nSee the 'Site' link for documentation.",
    "category": "System",
    "type": "Native App",
    "platform": "Windows"
  },
  {
    "name": "ImportExcel",
	"gui": false,
    "cliOptions": false,
    "cli": true,
    "urlPrefix": "PS Gallery: ",
    "url": "https://www.powershellgallery.com/packages/ImportExcel/",
    "urlText": "powershellgallery.com/packages/ImportExcel/",
	"extraUrlPrefix": "Site: ",
    "extraUrl": "https://github.com/dfinke/ImportExcel",
	"extraUrlText": "github.com/dfinke/ImportExcel",
    "description": "Legendary PowerShell module that I use weekly to import Excel files into my scripts, and create them. It even supports formatting, multiple sheets, charts and pivot tables and doesn't need Excel to be installed. \nLots of docs and examples on GitHub.",
    "category": "Scripting",
    "type": "PowerShell",
    "platform": "Win|Mac|Linux"
  }
]